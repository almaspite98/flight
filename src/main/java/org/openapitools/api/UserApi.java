/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.Preferences;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-11-15T21:12:04.614312100+01:00[Europe/Prague]")
@Validated
@Api(value = "user", description = "the user API")
public interface UserApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /user : Get preferences
     *
     * @param token Security token (required)
     * @param preferences  (required)
     * @return OK (status code 200)
     *         or Unauthorised (status code 401)
     */
    @ApiOperation(value = "Get preferences", nickname = "getpreferences", notes = "", tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 401, message = "Unauthorised") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/user"
    )
    default ResponseEntity<Void> getpreferences(@ApiParam(value = "Security token", required = true) @RequestHeader(value = "token", required = true) String token,@ApiParam(value = "", required = true) @RequestHeader(value = "preferences", required = true) Preferences preferences) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /user : Set preferences
     *
     * @param token Security token (required)
     * @param preferences Preferences (required)
     * @return Updated. (status code 201)
     *         or Unauthorised (status code 401)
     */
    @ApiOperation(value = "Set preferences", nickname = "setpreferences", notes = "", tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Updated."),
        @ApiResponse(code = 401, message = "Unauthorised") })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/user",
        consumes = { "application/json", "application/xml" }
    )
    default ResponseEntity<Void> setpreferences(@ApiParam(value = "Security token", required = true) @RequestHeader(value = "token", required = true) String token,@ApiParam(value = "Preferences", required = true) @Valid @RequestBody Preferences preferences) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
