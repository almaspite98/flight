/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.User;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-11-15T21:12:04.614312100+01:00[Europe/Prague]")
@Validated
@Api(value = "register", description = "the register API")
public interface RegisterApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /register : Register a user
     *
     * @param user Username and hash of password (required)
     * @return Registered. (status code 201)
     *         or Already registered (status code 403)
     */
    @ApiOperation(value = "Register a user", nickname = "register", notes = "", tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Registered."),
        @ApiResponse(code = 403, message = "Already registered") })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/register",
        consumes = { "application/json", "application/xml" }
    )
    default ResponseEntity<Void> register(@ApiParam(value = "Username and hash of password", required = true) @Valid @RequestBody User user) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
